@page "/overtime/detail/{id}"
@using Models;
@using Services;
@using System.Text.Json
@inject IOvertimeService OvertimeService;
@inject NavigationManager UriHelper;

<PageTitle>Overtime Detail @id</PageTitle>

<h3>Overtime Request Detail</h3>
<br>
@if (isLoading)
{
    <br><br><br>
    <p>Loading Overtime Data...</p>
    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
}
else
{
<div class="row">
    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6">
                <p>Start Date*</p>
            </div>
            <div class="col-sm-6">
                <p>End Date*</p>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
            <span class="oi oi-calendar" aria-hidden="true"></span> @OvertimeById[0].start_date.ToString("MMMM, dd yyyy")
            <hr size="3px"/>
            </div>
            <div class="col-sm-6">
            <span class="oi oi-calendar" aria-hidden="true"></span> @OvertimeById[0].end_date.ToString("MMMM, dd yyyy")
            <hr size="3px"/>
            </div>
        </div>
        </div>
    </div>
        <br>

    <div class="col-sm-6">
        <div class="row">
            <div class="col-sm-6">
                <p>Start Time*</p>
            </div>
            <div class="col-sm-6">
                <p>End Time*</p>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
            <span class="oi oi-clock" aria-hidden="true"></span> @OvertimeById[0].start_time.ToString("HH:mm:ss")
            <hr size="3px"/>
            </div>
            <div class="col-sm-6">
            <span class="oi oi-clock" aria-hidden="true"></span> @OvertimeById[0].end_time.ToString("HH:mm:ss")
            <hr size="3px"/>
            </div>
        </div>

        <div class="col-sm-6">
            <p>Remarks</p>
        </div>

        <div class="col-sm-6">
            @if (OvertimeById[0].remarks is null)
            {<p style="color: red;">No Remarks</p>}
            else
            {<p>@OvertimeById[0].remarks</p>}
            <hr size="3px"/>
            <br>
            <div class="col-sm-6">
            <p>Attachment</p>
        </div>

        <div class="col-sm-12">
            @if (OvertimeById[0].attachment is null)
            {
                <p style="color: red;">No Data*</p>
            }
            else
            {<img src=@OvertimeById[0].attachment alt="Attachment File" width="300" height="300">}
            <br><br>
        @if (OvertimeById[0].status == 1)
        {<p>Request Date : @OvertimeById[0].request_date.ToString("MMMM, dd yyyy")</p>}
        
        else if (OvertimeById[0].status == 2 || OvertimeById[0].status == 4 || OvertimeById[0].status ==5)
        {<p>Request Date : @OvertimeById[0].request_date.ToString("MMMM, dd yyyy")</p>
        <p>Approved Date : @OvertimeById[0].approved_date.ToString("MMMM, dd yyyy")</p>}
        </div>
        <br>
        @if (@OvertimeById[0].status == 1)
        {
            <div class="btn btn-danger"  type="button" @onclick="() => Navigate(OvertimeById[0].id)">Cancel</div>
        }
        
        else if (@OvertimeById[0].status == 2 || @OvertimeById[0].status == 5)
        {
            <div class="row">
                <div class="col-sm-3">
                    <div class="btn btn-danger"  type="button" @onclick="() => Navigate(OvertimeById[0].id)">Cancel</div>
                </div>

                <div class="col-sm-8">
                    <div class="btn btn-success"  type="button" @onclick="() => Navigate(OvertimeById[0].id)">Submit Settlement</div>
                </div>
            </div>
        }
    </div>
    </div>
}

@code {
    [Parameter]
    public string id { get; set; }
    private bool isLoading = true;
    public List<OvertimeDTO> OvertimeById { get; set; } = new List<OvertimeDTO>();

    protected override async Task OnInitializedAsync()
    {
        await GetOvertimeById(Int32.Parse(id));
    }

    private async Task GetOvertimeById(int id)
    {
        isLoading = true;
        OvertimeById = await OvertimeService.GetOvertimeById(id);

        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(OvertimeById[0]));
        isLoading = false;
    }

    private void Navigate(int id)
    {
       UriHelper.NavigateTo("/overtime/detail/" + id);
    }
}
