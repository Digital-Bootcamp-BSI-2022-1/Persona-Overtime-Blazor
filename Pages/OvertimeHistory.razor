@page "/overtime/history"

@using Models;
@using PersonaOvertimeWeb.Components
@using Services;
@using System.Text.Json
@inject IOvertimeService OvertimeService;
@inject IUserDetailService UserDetailService;
@inject NavigationManager UriHelper;

<style>
    .spanner {
        position: relative;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block;
        text-align: center;
        color: #0582AE;
        visibility: visible;
    }
</style>

<PageTitle>Overtime History - Persona</PageTitle>

@if (isLoadingPage)
{
    <div style="height: 80vh;">
        <div class="spanner" style="display:flex;justify-content:center;align-items:center;">
            <div>
                <div class="spinner-border"></div>
                <p>Loading</p>
            </div>
        </div>
    </div>
}
else
{
    @if (!isLoggedIn)
    {
        <div style="height: 80vh;">
            <div class="spanner" style="display:flex;justify-content:center;align-items:center;">
                <div>
                    <div><span class="oi oi-circle-x" aria-hidden="true" style="font-size: 30px; color: #CA000E;"></span></div>
                    <p>Please <a href="/login"><b>Login</b></a></p>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container" style="padding: 20px;">
            <h3>Overtime History Data</h3>
            <br>
            @if (isLoading)
            {
                <div style="height: 100%;">
                    <div class="spanner" style="display:flex;justify-content:center;align-items:center;">
                        <div>
                            <div class="spinner-border"></div>
                            <p>Loading</p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="container">
                    <div class="row">
                        @if (User.grade != "VIA")
                        {
                            @foreach (var item in OvertimeDataListSup)
                            {
                                if (item.status == 3 || item.status == 6 || item.status == 9)
                                {
                                    <OvertimeTile_History item="item" isSuperior=true></OvertimeTile_History>
                                }
                            }
                        }
                        else
                        {
                            @foreach (var item in OvertimeDataList)
                            {
                                if (item.status == 3 || item.status == 6 || item.status == 9)
                                {
                                    <OvertimeTile_History item="item" isSuperior=false></OvertimeTile_History>
                                }
                            }
                        }
                    </div>
                </div>
            }
        </div>
    }
}

@code {
    private bool isLoadingPage = true;
    private bool isLoggedIn = false;
    private bool isLoading = true;

    [Parameter]
    public List<OvertimeDTO> OvertimeDataList { get; set; } = new();

    [Parameter]
    public List<OvertimeDTO> OvertimeDataListSup { get; set; } = new();
    public UserDTO User { get; set; } = new UserDTO();

    protected override async Task OnInitializedAsync()
    {
        isLoadingPage = true;
        var result = await ProtectedSessionStore.GetAsync<string>("token");
        if (result.Success)
        {
            isLoggedIn = true;
            await GetUserDetail();
            await GetAllOvertimeList();
            await GetAllOvertimeListSuperior();
        }
        else
        {
            isLoggedIn = false;
        }
        isLoadingPage = false;
        isLoading = false;
    }

    private async Task GetAllOvertimeList()
    {
        isLoading = true;

        var token = await ProtectedSessionStore.GetAsync<string>("token");
        OvertimeDataList = await OvertimeService.GetAllOvertimeList(token.Value);
        foreach (var item in OvertimeDataList)
        {
            @* Console.WriteLine(JsonSerializer.Serialize(item)); *@
        }
        @* Console.WriteLine(JsonSerializer.Serialize(OvertimeDataList)); *@

        isLoading = false;
    }
    private async Task GetAllOvertimeListSuperior()
    {
        isLoading = true;

        var token = await ProtectedSessionStore.GetAsync<string>("token");
        OvertimeDataListSup = await OvertimeService.GetAllOvertimeListSuperior(token.Value);
        foreach (var item in OvertimeDataListSup)
        { }

        isLoading = false;
    }

    private async Task GetUserDetail()
    {
        isLoading = true;
        var token = await ProtectedSessionStore.GetAsync<string>("token");
        User = await UserDetailService.GetUserDetail(token.Value);
        isLoading = false;
    }
    private void Navigate(int id)
    {
        UriHelper.NavigateTo("/overtime/detail/" + id);
    }
}
