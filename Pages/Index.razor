@using PersonaOvertimeWeb.Models;
@using Services;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IOvertimeService OvertimeService;
@page "/"

<PageTitle>Home</PageTitle>

@if (!isLoggedIn)
{
    <br><br><br>
    <p>Please Login</p>
    <br><br><br>
}
else
{
<h3>Good Afternoon!</h3>

<p>Welcome to Persona</p>

<br><br><br><br><br><br>

@if (isLoading)
{
<p>Loading data.....</p>
}
else
{
<p>Overtime Activity</p>

@if (OvertimestatisticData != null)
{
<div class="col-sm-12">
    <div class="row sm-3">
        <div class="column col-sm-4">
            <div class="card">
                <h3>Need Approval</h3>
                <p>@OvertimestatisticData.data.approved</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Approved</h3>
                <p>@OvertimestatisticData.data.approved</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Rejected</h3>
                <p>@OvertimestatisticData.data.rejected</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Settlement Approval</h3>
                <p>@OvertimestatisticData.data.settlement_approval</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Revise</h3>
                <p>@OvertimestatisticData.data.revise</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Cancelled</h3>
                <p>@OvertimestatisticData.data.cancelled</p>
                <p>Some text</p>
            </div>
            <div class="card">
                <h3>Completed</h3>
                <p>@OvertimestatisticData.data.completed</p>
                <p>Some text</p>
            </div>
        </div>
    </div>
</div>
}


<br><br><br><br><br><br>
<SurveyPrompt Title="How is Blazor working for you?" />
}
}


@code {
    private bool isLoggedIn;
    private bool isLoading;
    SuccessResponse<OvertimeStatistic> OvertimestatisticData = new SuccessResponse<OvertimeStatistic>();

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var result = await ProtectedSessionStore.GetAsync<string>("token");
        if (result.Success)
        {
            isLoggedIn = true;
            await GetOvertimeStatistic();
        }
        else
        {
            isLoggedIn = false;
            isLoading = false;
        }
    }

    private async Task GetOvertimeStatistic()
    {
        isLoading = true;

        OvertimestatisticData = await OvertimeService.GetOvertimeStatistic();
        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(OvertimestatisticData));
        Console.WriteLine("TEST");

        isLoading = false;
    }
}